---
- name: install tomcat 10
  hosts: appserver
  tasks:
    - name: fail for unsupported os
      ansible.builtin.fail:
        msg: "This playbook is designed only for Ubuntu os"
      when: ansible_facts['distribution'] != 'Ubuntu'
    - name: update packages and install java
      ansible.builtin.apt:
        name: "{{ java_package_name }}"
        update_cache: yes
        state: present
      become: yes
    - ansible.builtin.debug:
        msg: "java is installed using package {{ java_package_name }}"
    - name: create tomcat group
      ansible.builtin.group:
        name: "{{ group }}"
        state: present
      become: yes
    - ansible.builtin.debug:
        msg: "group {{ group }} has been created"
    - name: create tomcat user
      ansible.builtin.user:
        create_home: yes
        group: "{{ group }}"
        home: "{{ home_dir  }}"
        name: "{{ user }}"
        shell: "{{ user_shell }}"
        system: true
        state: present
      become: yes
    - ansible.builtin.debug:
        msg: "user {{ user }} has been created"
    - name: download tomcat tar
      ansible.builtin.unarchive:
        src: "{{ tomcat_url }}"
        dest: "{{ home_dir  }}"
        owner: "{{ user }}"
        remote_src: yes
      become: yes
    - ansible.builtin.debug:
        msg: "tomcat is downloaded and extracted to {{ home_dir  }}"
    - name: return motd to registered var
      command: sudo chmod +x '/opt/tomcat/apache-tomcat-10.0.10/bin/*.sh'
      become: yes
    - name: find all the shell files
      find:
        paths: "/opt/tomcat/apache-tomcat-10.0.10/bin"
        patterns: '*.sh'
      register: shell_files
    - name: change permissions to execute
      file:
        path: "{{ item.path }}"
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "755"
      loop: "{{ shell_files.files }}"
    - name: create a configurarion file of application acccount
      ansible.builtin.copy module :
        src: tomcat/tomcat-users.xml
        dest: /opt/tomcat/apache-tomcat-10.1.19/conf/tomcat-users.xml 
        state: directory
        owner: "{{ user }}"
        group: "{{ group }}"
        mode:  0600
      become: yes
    - name: create host manager
      ansible.builtin.copy module:
         src: tomcat/hostmanager.xml
         dest: /opt/tomcat/apache-tomcat-10.1.19/webapps/host-manager/META-INF/context.xml
         state: directory
         owner: "{{ user }}"
         group: "{{ group }}"
         mode: 0600
      become: yes
    - name: conf contex file
      ansible.builtin.copy module :
         src: tomcat/managercontex.xml      
         dest: /opt/tomcat/apache-tomcat-10.1.19/webapps/manager/META-INF/context.xml
         state: directory
         owner: "{{ user }}"
         group: "{{ group }}"
         mode: 0600
      become: yes
    - name: creae a file of service 
      ansible.builtin.file module:
         src: tomcat/tomcat.service
         path: /etc/systemd/system/tomcat.service 
         state: touch
         owner: "{{ user }}"
         group: "{{ group }}"
         mode: 0600
      become: yes
    - name: copy file
      ansible.builtin.copy module :
          src: tomcat/tomcat.service
          dest: sudo nano /etc/systemd/system/tomcat.service 
          mode: 0700
      notify: 
         -  start tomcat

  handlers:
    - name: start tomcat
      ansible.builtin.service:
        name: tomcat
        state: started
        enabled: yes
        daemon_reload: yes 

      